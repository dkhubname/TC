/*
 * TeamCity REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2018.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Group;
import io.swagger.client.model.Users;
import java.io.IOException;

/**
 * Represents group approval rule and its current status for the given build.
 */
@ApiModel(description = "Represents group approval rule and its current status for the given build.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-02-26T16:22:21.476Z")
public class GroupApprovalRule {
  @SerializedName("group")
  private Group group = null;

  @SerializedName("requiredApprovalsCount")
  private Integer requiredApprovalsCount = null;

  @SerializedName("currentlyApprovedBy")
  private Users currentlyApprovedBy = null;

  public GroupApprovalRule group(Group group) {
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @ApiModelProperty(value = "")
  public Group getGroup() {
    return group;
  }

  public void setGroup(Group group) {
    this.group = group;
  }

  public GroupApprovalRule requiredApprovalsCount(Integer requiredApprovalsCount) {
    this.requiredApprovalsCount = requiredApprovalsCount;
    return this;
  }

   /**
   * Get requiredApprovalsCount
   * @return requiredApprovalsCount
  **/
  @ApiModelProperty(value = "")
  public Integer getRequiredApprovalsCount() {
    return requiredApprovalsCount;
  }

  public void setRequiredApprovalsCount(Integer requiredApprovalsCount) {
    this.requiredApprovalsCount = requiredApprovalsCount;
  }

  public GroupApprovalRule currentlyApprovedBy(Users currentlyApprovedBy) {
    this.currentlyApprovedBy = currentlyApprovedBy;
    return this;
  }

   /**
   * Get currentlyApprovedBy
   * @return currentlyApprovedBy
  **/
  @ApiModelProperty(value = "")
  public Users getCurrentlyApprovedBy() {
    return currentlyApprovedBy;
  }

  public void setCurrentlyApprovedBy(Users currentlyApprovedBy) {
    this.currentlyApprovedBy = currentlyApprovedBy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupApprovalRule groupApprovalRule = (GroupApprovalRule) o;
    return Objects.equals(this.group, groupApprovalRule.group) &&
        Objects.equals(this.requiredApprovalsCount, groupApprovalRule.requiredApprovalsCount) &&
        Objects.equals(this.currentlyApprovedBy, groupApprovalRule.currentlyApprovedBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(group, requiredApprovalsCount, currentlyApprovedBy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupApprovalRule {\n");
    
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    requiredApprovalsCount: ").append(toIndentedString(requiredApprovalsCount)).append("\n");
    sb.append("    currentlyApprovedBy: ").append(toIndentedString(currentlyApprovedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

